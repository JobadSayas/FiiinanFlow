{"ast":null,"code":"var _jsxFileName = \"/Users/jobad/React/finanzas/src/screens/MainScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Budget from '../components/Budget';\nimport Methods from '../components/Methods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n  //RECORDS\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://finanzas.visssible.com/backend/apartados-consultar.php');\n        setRecords(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []); // The empty dependency array ensures that this effect runs once on mount\n\n  //BUDGET COUNT\n\n  const [sumOfAmounts, setSumOfAmounts] = useState(0);\n\n  // Use async/await to wait for the data to be fetched before processing\n  useEffect(() => {\n    const calculateSumOfAmounts = async () => {\n      let sum = 0;\n      for (const record of records) {\n        if (record.budget === 1) {\n          sum += parseFloat(record.amount);\n        }\n      }\n      setSumOfAmounts(sum);\n    };\n    calculateSumOfAmounts();\n  }, [records]); // This effect runs whenever the records state changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"principal\",\n    className: \"pantalla completa\",\n    style: {\n      paddingBottom: '66px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Methods, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"apartados\",\n      children: records.map(record => /*#__PURE__*/_jsxDEV(Budget, {\n        name: record.nombre,\n        amount: record.saldo,\n        icon: record.icono,\n        distribution: record.reparticion\n      }, record.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}, \"9nbUyi1P3izB02op+uKwgLWxfPM=\");","map":{"version":3,"names":["React","useEffect","useState","axios","Budget","Methods","jsxDEV","_jsxDEV","_s","records","setRecords","fetchData","response","get","data","error","console","sumOfAmounts","setSumOfAmounts","calculateSumOfAmounts","sum","record","budget","parseFloat","amount","id","className","style","paddingBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","nombre","saldo","icon","icono","distribution","reparticion"],"sources":["/Users/jobad/React/finanzas/src/screens/MainScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport Budget from '../components/Budget';\nimport Methods from '../components/Methods';\n\nexport default () =>  {\n\n    //RECORDS\n    const [records, setRecords] = useState([]);\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('https://finanzas.visssible.com/backend/apartados-consultar.php');\n                setRecords(response.data);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n        \n        fetchData();\n    }, []); // The empty dependency array ensures that this effect runs once on mount\n    \n\n    \n    //BUDGET COUNT\n\n    const [sumOfAmounts, setSumOfAmounts] = useState(0);\n\n    // Use async/await to wait for the data to be fetched before processing\n    useEffect(() => {\n        const calculateSumOfAmounts = async () => {\n            let sum = 0;\n            for (const record of records) {\n                if (record.budget === 1) {\n                    sum += parseFloat(record.amount);\n                }\n            }\n            setSumOfAmounts(sum);\n        };\n\n        calculateSumOfAmounts();\n    }, [records]); // This effect runs whenever the records state changes\n\n\n    return (\n\n        <div id=\"principal\" className='pantalla completa' style={{paddingBottom: '66px'}}>\n\n            <Methods/>\n            \n            <ul id='chart'></ul>\n\n            <ul id=\"apartados\">\n                {records.map(record => (\n                    <Budget \n                        key={record.id} \n                        name={record.nombre} \n                        amount={record.saldo} \n                        icon={record.icono} \n                        distribution={record.reparticion}\n                    />\n                ))}\n            </ul>\n        \n        </div>\n    );\n  \n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAAC,EAAA,CAAe,MAAO;EAAAA,EAAA;EAElB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,gEAAgE,CAAC;QAClGH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAIR;;EAEA,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;;EAEnD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMkB,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAIC,GAAG,GAAG,CAAC;MACX,KAAK,MAAMC,MAAM,IAAIZ,OAAO,EAAE;QAC1B,IAAIY,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;UACrBF,GAAG,IAAIG,UAAU,CAACF,MAAM,CAACG,MAAM,CAAC;QACpC;MACJ;MACAN,eAAe,CAACE,GAAG,CAAC;IACxB,CAAC;IAEDD,qBAAqB,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC;;EAGf,oBAEIF,OAAA;IAAKkB,EAAE,EAAC,WAAW;IAACC,SAAS,EAAC,mBAAmB;IAACC,KAAK,EAAE;MAACC,aAAa,EAAE;IAAM,CAAE;IAAAC,QAAA,gBAE7EtB,OAAA,CAACF,OAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEV1B,OAAA;MAAIkB,EAAE,EAAC;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEpB1B,OAAA;MAAIkB,EAAE,EAAC,WAAW;MAAAI,QAAA,EACbpB,OAAO,CAACyB,GAAG,CAACb,MAAM,iBACfd,OAAA,CAACH,MAAM;QAEH+B,IAAI,EAAEd,MAAM,CAACe,MAAO;QACpBZ,MAAM,EAAEH,MAAM,CAACgB,KAAM;QACrBC,IAAI,EAAEjB,MAAM,CAACkB,KAAM;QACnBC,YAAY,EAAEnB,MAAM,CAACoB;MAAY,GAJ5BpB,MAAM,CAACI,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKjB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAGd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}